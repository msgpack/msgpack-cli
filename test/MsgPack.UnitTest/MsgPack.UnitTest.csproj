<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <ProjectGuid>{3889C9BE-0473-4B41-80E8-C4C923E837E7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AssemblyName>MsgPack.UnitTest</AssemblyName>
    <!-- TODO: netcoreapp2.0 -->
    <TargetFrameworks>net46;netcoreapp1.0;</TargetFrameworks>
  </PropertyGroup>
  <Import Project="..\..\MsgPack.Common.props" />
  <PropertyGroup>
    <DocumentationFile></DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)' == 'netcoreapp1.0'">
    <!-- Run netcoreapp1.0 as .NET Standard 1.3 -->
    <DefineConstants>$(DefineConstants);NETSTANDARD1_3</DefineConstants>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="NUnit" Version="3.7.1" />
    <PackageReference Include="NUnit3TestAdapter" Version="3.8.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="2.3.1" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="15.3.0" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp1.0'">
    <PackageReference Include="Microsoft.CSharp" Version="4.0.1" />
    <PackageReference Include="System.Collections.NonGeneric" Version="4.0.1" />
    <PackageReference Include="System.Collections.Specialized" Version="4.0.1" />
    <PackageReference Include="System.Data.Common" Version="4.1.0" />
    <PackageReference Include="System.Diagnostics.Contracts" Version="4.0.1" />
    <PackageReference Include="System.Numerics.Vectors" Version="4.1.1" />
    <PackageReference Include="System.Runtime.Numerics" Version="4.0.1" />
    <PackageReference Include="System.Runtime.Serialization.Primitives" Version="4.1.1" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'net46'">
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="gen35\**\*.cs" />
    <Compile Remove="Dummies\**\*.cs" />
    <Compile Remove="Mono\**\*.cs" />
    <Compile Remove="Augments.cs" />
    <Compile Remove="Serialization\CodeDomCodeGeneration.cs" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp1.0'">
    <Compile Include="..\MsgPack.NUnitPortable\TimeoutAttribute.cs" />
    <Compile Remove="Serialization\PreGeneratedSerializerGenerator.cs" />
    <Compile Remove="Serialization\RoslynCodeGeneration.cs" />
    <Compile Remove="Serialization\SerializerGeneratorTest.cs " />
    <Compile Remove="Serialization\TempFileDependentAssemblyManager.cs " />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="ByteArrayPackerTest.Allocation.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ByteArrayPackerTest.Allocation.tt</DependentUpon>
    </Compile>
    <Compile Update="DirectConversionTest.Scalar.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>DirectConversionTest.Scalar.tt</DependentUpon>
    </Compile>
    <Compile Update="MessagePackObjectTest.Conversion.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.Conversion.tt</DependentUpon>
    </Compile>
    <Compile Update="MessagePackObjectTest.Equals.Integer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.Equals.Integer.tt</DependentUpon>
    </Compile>
    <Compile Update="MessagePackObjectTest.Equals.Real.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.Equals.Real.tt</DependentUpon>
    </Compile>
    <Compile Update="MessagePackObjectTest.Exceptionals.Conversion.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.Exceptionals.Conversion.tt</DependentUpon>
    </Compile>
    <Compile Update="MessagePackObjectTest.IsTypeOf.Array.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.IsTypeOf.Array.tt</DependentUpon>
    </Compile>
    <Compile Update="MessagePackObjectTest.IsTypeOf.Integer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.IsTypeOf.Integer.tt</DependentUpon>
    </Compile>
    <Compile Update="MessagePackObjectTest.IsTypeOf.Map.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.IsTypeOf.Map.tt</DependentUpon>
    </Compile>
    <Compile Update="MessagePackObjectTest.IsTypeOf.Raw.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.IsTypeOf.Raw.tt</DependentUpon>
    </Compile>
    <Compile Update="PackerTest.Pack.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>PackerTest.Pack.tt</DependentUpon>
    </Compile>
    <Compile Update="PackerTest.PackObject.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>PackerTest.PackObject.tt</DependentUpon>
    </Compile>
    <Compile Update="PackerTest.PackT.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>PackerTest.PackT.tt</DependentUpon>
    </Compile>
    <Compile Update="PackUnpackTest.Scalar.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>PackUnpackTest.Scalar.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\ArrayReflectionBasedAutoMessagePackSerializerTest.cs">
      <DependentUpon>ArrayReflectionBasedAutoMessagePackSerializerTest.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="Serialization\ArrayReflectionBasedEnumSerializationTest.cs">
      <DependentUpon>ArrayReflectionBasedEnumSerializationTest.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="Serialization\ArrayFieldBasedEnumSerializationTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ArrayFieldBasedEnumSerializationTest.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\ArrayGenerationBasedAutoMessagePackSerializerTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ArrayGenerationBasedAutoMessagePackSerializerTest.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\ArrayGenerationBasedEnumSerializationTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ArrayGenerationBasedEnumSerializationTest.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\AutoMessagePackSerializerTest.Types.cs">
      <DependentUpon>AutoMessagePackSerializerTest.Types.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Serialization\EnumSerializationTest.EnumDefinitions.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>EnumSerializationTest.EnumDefinitions.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\MapReflectionBasedAutoMessagePackSerializerTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MapReflectionBasedAutoMessagePackSerializerTest.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\ReflectionBasedNilImplicationTest.cs">
      <DependentUpon>ReflectionBasedNilImplicationTest.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="Serialization\FieldBasedNilImplicationTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>FieldBasedNilImplicationTest.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\MapReflectionBasedEnumSerializationTest.cs">
      <DependentUpon>MapReflectionBasedEnumSerializationTest.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="Serialization\GenerationBasedNilImplicationTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>GenerationBasedNilImplicationTest.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\MapFieldBasedEnumSerializationTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MapFieldBasedEnumSerializationTest.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\MapGenerationBasedAutoMessagePackSerializerTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MapGenerationBasedAutoMessagePackSerializerTest.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\MapGenerationBasedEnumSerializationTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MapGenerationBasedEnumSerializationTest.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\PreGeneratedSerializerActivator.Types.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>PreGeneratedSerializerActivator.Types.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\VersioningTest.Cases.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>VersioningTest.Cases.tt</DependentUpon>
    </Compile>
    <Compile Update="Serialization\ArrayFieldBasedAutoMessagePackSerializerTest.cs">
      <DependentUpon>ArrayFieldBasedAutoMessagePackSerializerTest.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="Serialization\MapFieldBasedAutoMessagePackSerializerTest.cs">
      <DependentUpon>MapFieldBasedAutoMessagePackSerializerTest.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="ByteArrayUnpackerTest.Ext.cs">
      <DependentUpon>ByteArrayUnpackerTest.Ext.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="ByteArrayUnpackerTest.Raw.cs">
      <DependentUpon>ByteArrayUnpackerTest.Raw.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="ByteArrayUnpackerTest.Scalar.cs">
      <DependentUpon>ByteArrayUnpackerTest.Scalar.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="UnpackerTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackerTest.tt</DependentUpon>
    </Compile>
    <Compile Update="StreamUnpackerTest.Ext.cs">
      <DependentUpon>StreamUnpackerTest.Ext.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="UnpackerTest.Ext.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackerTest.Ext.tt</DependentUpon>
    </Compile>
    <Compile Update="StreamUnpackerTest.Scalar.cs">
      <DependentUpon>StreamUnpackerTest.Scalar.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="StreamUnpackerTest.Raw.cs">
      <DependentUpon>StreamUnpackerTest.Raw.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="UnpackerTest.Skip.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackerTest.Skip.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackerTest.Object.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackerTest.Object.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackerTest.Raw.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackerTest.Raw.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackerTest.Scalar.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackerTest.Scalar.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackerTest.Skip.Variations.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackerTest.Skip.Variations.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.Array.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Array.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.Boolean.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Boolean.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.Byte.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Byte.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.Double.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Double.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.Int16.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Int16.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.Int32.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Int32.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.Int64.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Int64.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.Map.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Map.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.Nil.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Nil.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.Raw.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Raw.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.SByte.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.SByte.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.Single.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Single.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.UInt16.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.UInt16.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.UInt32.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.UInt32.tt</DependentUpon>
    </Compile>
    <Compile Update="UnpackingTest.Combinations.UInt64.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.UInt64.tt</DependentUpon>
    </Compile>
    <Compile Update="TestRandom.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>TestRandom.tt</DependentUpon>
    </Compile>
    <Compile Update="PackerTest.PackBinary.cs">
      <DependentUpon>PackerTest.PackBinary.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="PackerTest.PackExtendedType.cs">
      <DependentUpon>PackerTest.PackExtendedType.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="UnpackingTest.Scalar.cs">
      <DependentUpon>UnpackingTest.Scalar.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="UnpackingTest.Raw.cs">
      <DependentUpon>UnpackingTest.Raw.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="UnpackingTest.Ext.cs">
      <DependentUpon>UnpackingTest.Ext.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <None Include="..\..\src\MsgPack.snk">
      <Link>MsgPack.snk</Link>
    </None>
    <None Include="app.config" />
    <None Include="cases.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="cases.mpac">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="cases_compact.mpac">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="DirectConversionTest.Scalar.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>DirectConversionTest.Scalar.cs</LastGenOutput>
    </None>
    <None Update="MessagePackObjectTest.Conversion.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.Conversion.cs</LastGenOutput>
    </None>
    <None Update="MessagePackObjectTest.Equals.Integer.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.Equals.Integer.cs</LastGenOutput>
    </None>
    <None Update="MessagePackObjectTest.Equals.Real.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.Equals.Real.cs</LastGenOutput>
    </None>
    <None Update="MessagePackObjectTest.Exceptionals.Conversion.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.Exceptionals.Conversion.cs</LastGenOutput>
    </None>
    <None Update="MessagePackObjectTest.IsTypeOf.Array.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.IsTypeOf.Array.cs</LastGenOutput>
    </None>
    <None Update="MessagePackObjectTest.IsTypeOf.Integer.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.IsTypeOf.Integer.cs</LastGenOutput>
    </None>
    <None Update="MessagePackObjectTest.IsTypeOf.Map.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.IsTypeOf.Map.cs</LastGenOutput>
    </None>
    <None Update="MessagePackObjectTest.IsTypeOf.Raw.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.IsTypeOf.Raw.cs</LastGenOutput>
    </None>
    <None Update="PackerTest.Pack.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PackerTest.Pack.cs</LastGenOutput>
    </None>
    <None Update="PackerTest.PackObject.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PackerTest.PackObject.cs</LastGenOutput>
    </None>
    <None Update="PackerTest.PackT.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PackerTest.PackT.cs</LastGenOutput>
    </None>
    <None Update="PackUnpackTest.Scalar.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PackUnpackTest.Scalar.cs</LastGenOutput>
    </None>
    <None Include="PEVerify.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Serialization\ArrayReflectionBasedAutoMessagePackSerializerTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ArrayReflectionBasedAutoMessagePackSerializerTest.cs</LastGenOutput>
    </None>
    <None Update="Serialization\ArrayReflectionBasedEnumSerializationTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ArrayReflectionBasedEnumSerializationTest.cs</LastGenOutput>
    </None>
    <None Update="Serialization\ArrayFieldBasedEnumSerializationTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ArrayFieldBasedEnumSerializationTest.cs</LastGenOutput>
    </None>
    <None Update="Serialization\ArrayGenerationBasedAutoMessagePackSerializerTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ArrayGenerationBasedAutoMessagePackSerializerTest.cs</LastGenOutput>
    </None>
    <None Update="Serialization\ArrayGenerationBasedEnumSerializationTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ArrayGenerationBasedEnumSerializationTest.cs</LastGenOutput>
    </None>
    <None Include="Serialization\AutoMessagePackSerializerTest.Polymorphism.ttinclude" />
    <None Include="Serialization\AutoMessagePackSerializerTest.ttinclude" />
    <None Update="Serialization\AutoMessagePackSerializerTest.Types.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>AutoMessagePackSerializerTest.Types.cs</LastGenOutput>
    </None>
    <None Include="Serialization\AutoMessagePackSerializerTest.Types.ttinclude" />
    <None Update="Serialization\EnumSerializationTest.EnumDefinitions.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>EnumSerializationTest.EnumDefinitions.cs</LastGenOutput>
    </None>
    <None Include="Serialization\EnumSerializationTest.ttinclude" />
    <None Update="Serialization\ReflectionBasedNilImplicationTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ReflectionBasedNilImplicationTest.cs</LastGenOutput>
    </None>
    <None Update="Serialization\FieldBasedNilImplicationTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>FieldBasedNilImplicationTest.cs</LastGenOutput>
    </None>
    <None Update="Serialization\GenerationBasedNilImplicationTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>GenerationBasedNilImplicationTest.cs</LastGenOutput>
    </None>
    <None Update="Serialization\MapReflectionBasedAutoMessagePackSerializerTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MapReflectionBasedAutoMessagePackSerializerTest.cs</LastGenOutput>
    </None>
    <None Update="Serialization\MapReflectionBasedEnumSerializationTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MapReflectionBasedEnumSerializationTest.cs</LastGenOutput>
    </None>
    <None Update="Serialization\MapFieldBasedEnumSerializationTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MapFieldBasedEnumSerializationTest.cs</LastGenOutput>
    </None>
    <None Update="Serialization\MapGenerationBasedAutoMessagePackSerializerTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MapGenerationBasedAutoMessagePackSerializerTest.cs</LastGenOutput>
    </None>
    <None Update="Serialization\MapGenerationBasedEnumSerializationTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MapGenerationBasedEnumSerializationTest.cs</LastGenOutput>
    </None>
    <None Include="Serialization\NilImplicationTest.ttinclude" />
    <None Update="Serialization\PreGeneratedSerializerActivator.Types.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PreGeneratedSerializerActivator.Types.cs</LastGenOutput>
    </None>
    <None Update="Serialization\VersioningTest.Cases.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>VersioningTest.Cases.cs</LastGenOutput>
    </None>
    <None Update="Serialization\ArrayFieldBasedAutoMessagePackSerializerTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ArrayFieldBasedAutoMessagePackSerializerTest.cs</LastGenOutput>
    </None>
    <None Update="Serialization\MapFieldBasedAutoMessagePackSerializerTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MapFieldBasedAutoMessagePackSerializerTest.cs</LastGenOutput>
    </None>
    <None Update="TestRandom.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>TestRandom.cs</LastGenOutput>
    </None>
    <None Update="UnpackerTest.Ext.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackerTest.Ext.cs</LastGenOutput>
    </None>
    <None Update="UnpackerTest.Raw.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackerTest.Raw.cs</LastGenOutput>
    </None>
    <None Update="UnpackerTest.Scalar.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackerTest.Scalar.cs</LastGenOutput>
    </None>
    <None Update="UnpackerTest.Skip.Variations.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackerTest.Skip.Variations.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.Array.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Array.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.Boolean.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Boolean.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.Byte.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Byte.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.Double.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Double.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.Int16.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Int16.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.Int32.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Int32.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.Int64.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Int64.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.Map.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Map.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.Nil.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Nil.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.Raw.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Raw.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.SByte.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.SByte.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.Single.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Single.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.UInt16.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.UInt16.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.UInt32.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.UInt32.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Combinations.UInt64.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.UInt64.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Common.ttinclude" />
    <None Update="PackerTest.PackBinary.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PackerTest.PackBinary.cs</LastGenOutput>
    </None>
    <None Update="PackerTest.PackExtendedType.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PackerTest.PackExtendedType.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Scalar.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Scalar.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Raw.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Raw.cs</LastGenOutput>
    </None>
    <None Update="UnpackingTest.Ext.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Ext.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\src\MsgPack\MsgPack.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Update="ByteArrayPackerTest.Allocation.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ByteArrayPackerTest.Allocation.cs</LastGenOutput>
    </None>
    <None Include="gen\_ReadMe.txt" />
    <None Update="StreamUnpackerTest.Scalar.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>StreamUnpackerTest.Scalar.cs</LastGenOutput>
    </None>
    <None Update="StreamUnpackerTest.Raw.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>StreamUnpackerTest.Raw.cs</LastGenOutput>
    </None>
    <None Update="StreamUnpackerTest.Ext.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>StreamUnpackerTest.Ext.cs</LastGenOutput>
    </None>
    <None Update="ByteArrayUnpackerTest.Ext.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ByteArrayUnpackerTest.Ext.cs</LastGenOutput>
    </None>
    <None Update="ByteArrayUnpackerTest.Raw.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ByteArrayUnpackerTest.Raw.cs</LastGenOutput>
    </None>
    <None Update="ByteArrayUnpackerTest.Scalar.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ByteArrayUnpackerTest.Scalar.cs</LastGenOutput>
    </None>
    <None Update="UnpackerTest.Skip.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackerTest.Skip.cs</LastGenOutput>
    </None>
    <None Update="UnpackerTest.Object.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackerTest.Object.cs</LastGenOutput>
    </None>
    <None Update="UnpackerTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackerTest.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>